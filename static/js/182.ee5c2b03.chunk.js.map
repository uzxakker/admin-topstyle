{"version":3,"file":"static/js/182.ee5c2b03.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        else if (typeof keyframes[i] === \"string\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.8\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.8\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.8 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","this","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","startLoop","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getKeyframes","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","getValueTransition","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","ProjectionNode","splitCSSVariableRegex","parseCSSVariable","exec","getVariableValue","fallback","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","apply","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}